// <auto-generated />
using System;
using Gedonist.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Gedonist.DataAccess.Migrations
{
    [DbContext(typeof(AppDataContext))]
    [Migration("20250718233215_Serialize")]
    partial class Serialize
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Gedonist.Core.Models.Category", b =>
                {
                    b.Property<int>("Category_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Category_Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Category_Id");

                    b.HasIndex("Name");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Gedonist.Core.Models.Product", b =>
                {
                    b.Property<int>("Product_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Product_Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int?>("ProductCategoryBind_Id")
                        .HasColumnType("integer");

                    b.HasKey("Product_Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Gedonist.Core.Models.ProductCategoryBind", b =>
                {
                    b.Property<int>("Product_Id")
                        .HasColumnType("integer");

                    b.Property<int>("Category_Id")
                        .HasColumnType("integer");

                    b.HasKey("Product_Id", "Category_Id");

                    b.HasIndex("Category_Id");

                    b.HasIndex("Product_Id")
                        .IsUnique();

                    b.ToTable("ProductCategoryBinds");
                });

            modelBuilder.Entity("Gedonist.Core.Models.ProductCategoryBind", b =>
                {
                    b.HasOne("Gedonist.Core.Models.Category", "Category")
                        .WithMany("ProductCategoryBinds")
                        .HasForeignKey("Category_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gedonist.Core.Models.Product", "Product")
                        .WithOne("ProductCategoryBind")
                        .HasForeignKey("Gedonist.Core.Models.ProductCategoryBind", "Product_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Gedonist.Core.Models.Category", b =>
                {
                    b.Navigation("ProductCategoryBinds");
                });

            modelBuilder.Entity("Gedonist.Core.Models.Product", b =>
                {
                    b.Navigation("ProductCategoryBind");
                });
#pragma warning restore 612, 618
        }
    }
}
